# This is a Spack Environment file for developing CP2K.
spack:
  specs:
    - "mpich@4.1.2"
    - "openblas@0.3.24"
    - "netlib-scalapack@2.2.2"
    - "cosma@2.6.6"
    - "dbcsr@2.8.0"
    - "dftd4@3.6.0"
    - "dla-future@0.7.3"
    - "dla-future-fortran@0.2.0"
    - "elpa@2024.03.001"
    - "fftw@3.3.10"
    - "hdf5@1.14"
    - "libint@2.9.0"
    - "libsmeagol@1.2"
    - "libvori@220621"
    - "libxc@7.0.0"
    - "libxsmm@1.17"
    - "plumed@2.9.2"
    - "python@3.11"
    - "py-torch@2.5"
    - "sirius@7.6.1"
    - "spglib@2.3.0"
    - "spla@1.6.1"
    - "trexio@2.5.0"
  packages:
    all:
      prefer:
        - +mpi
        - ~cuda
        - ~rocm
    # MPI, BLAS, LAPACK, ScaLAPACK
    mpi:
      require:
        - mpich
    mpich:
      require:
        - device=ch3
        - netmod=tcp
    blas:
      require:
        - openblas
    lapack:
      require:
        - openblas
    scalapack:
      require:
        - netlib-scalapack
    openblas:
      require:
        - +fortran
        - threads=openmp
    # Dependencies for CP2K
    cosma:
      require:
        - +scalapack
    dbcsr:
      require:
        - +openmp
    dftd4:
      require:
        - build_system=cmake
    dla-future:
      require:
        - +scalapack
    elpa:
      require:
        - +openmp
    fftw-api:
      require:
        - "@3"
        - fftw
    fftw:
      require:
        - +openmp
    hdf5:
      require:
        - +fortran
    libint:
      require:
        - +fortran
        - tune=cp2k-lmax-5
    libxc:
      require:
        - +kxc
        - build_system=cmake
    py-torch:
      require:
        - +custom-protobuf
        - ~cuda
        - ~rocm
        - ~kineto
        - ~distributed
    sirius:
      require:
        - +fortran
        - +pugixml
        - ~apps
        - +vdwxc
    spla:
      require:
        - +fortran
    trexio:
      require:
        - +hdf5
        - build_system=cmake
  view:
    default:
      root: ./spack-env/view
      exclude:
        # Exclude gcc-runtime to avoid adding a copy of libgomp.so to the view
        - gcc-runtime
  concretizer:
    unify: true
#EOF
